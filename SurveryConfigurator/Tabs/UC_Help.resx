<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>